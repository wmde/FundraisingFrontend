{#
 This is a template "page" for developing the form page.
 Try with the url path `/page/DonationForm.html.twig` (yes, with that suffix)

 TODO when the Javascript works, move this form to the wiki and remove the comments around the html tags
#}
<!-- <html> -->

<div id="validation-errors" class="errorbox" style="display:none">
    <strong>Bei der Prüfung Ihrer Eingaben wurden Probleme bemerkt</strong>.
    Bitte überprüfen Sie Ihre Angaben in folgenden Feldern: <strong class="fields">keine</strong>
</div>

<div id="paymentPage">
    {% include 'Form1.html.twig' %}
</div>

<div id="personalDataPage">
    {% include 'Form2.html.twig' %}
</div>

<div id="bankConfirmationPage">
    {% include 'Form3.html.twig' %}
</div>

<script id="init-form"
        data-initial-form-values="{% if initialFormValues %}{$ initialFormValues|json_encode|e('html_attr') $}{% else %}{}{% endif %}"
        data-violated-fields="{% if violatedFields %}{$ violatedFields|json_encode|e('html_attr') $}{% else %}{}{% endif %}"
        data-validate-amount-url="{$ basepath|e('html_attr') $}/validate-amount"
        data-validate-address-url="{$ basepath|e('html_attr') $}/validate-address"
        data-validate-iban-url="{$ basepath|e('html_attr') $}/check-iban"
        data-generate-iban-url="{$ basepath|e('html_attr') $}/generate-iban"
        >
    // Initialize the form

    $( function () {
        var initData = $( '#init-form' ),
            store = WMDE.Store.createDonationStore( WMDE.createInitialStateFromViolatedFields( initData.data( 'violatedFields' ) ) ),
            actions = WMDE.Actions
            ;

        WMDE.StoreUpdates.connectComponentsToStore(
            [
                WMDE.Components.createAmountComponent( store, $( '.amount-input' ), $( '.amount-select' ) ),
                WMDE.Components.createRadioComponent( store, $( '.payment-type-select' ), 'paymentType' ),
                WMDE.Components.createRadioComponent( store, $( '.interval-type-select' ), 'paymentPeriodInMonths' ),
                WMDE.Components.createRadioComponent( store, $( '.payment-period-select' ), 'paymentPeriodInMonths' ),
                WMDE.Components.createBankDataComponent( store, {
                    ibanElement: $( '#iban' ),
                    bicElement: $( '#bic' ),
                    accountNumberElement: $( '#account-number' ),
                    bankCodeElement: $( '#bank-code' ),
                    bankNameFieldElement: $( '#field-bank-name' ),
                    bankNameDisplayElement: $( '#bank-name' ),
                    debitTypeElement: $( '.debit-type-select' )
                } ),
                WMDE.Components.createRadioComponent( store, $( '.address-type-select' ), 'addressType' ),
                WMDE.Components.createRadioComponent( store, $( '.salutation' ), 'salutation' ),
                WMDE.Components.createRadioComponent( store, $( '.personal-title' ), 'title' ),
                WMDE.Components.createTextComponent( store, $( '#first-name' ), 'firstName' ),
                WMDE.Components.createTextComponent( store, $( '#last-name' ), 'lastName' ),
                WMDE.Components.createTextComponent( store, $( '#company-name' ), 'companyName' ),
                WMDE.Components.createTextComponent( store, $( '#street' ), 'street' ),
                WMDE.Components.createTextComponent( store, $( '#post-code' ), 'postcode' ),
                WMDE.Components.createTextComponent( store, $( '#city' ), 'city' ),
                WMDE.Components.createRadioComponent( store, $( '#country' ), 'country' ),
                WMDE.Components.createTextComponent( store, $( '#email' ), 'email' ),
                WMDE.Components.createCheckboxComponent( store, $( '#confirm_sepa' ), 'confirmSepa' ),
                WMDE.Components.createCheckboxComponent( store, $( '#confirm_shortterm' ), 'confirmShortTerm' ),
            ],
            store,
            'donationFormContent'    
        );

        WMDE.StoreUpdates.connectValidatorsToStore(
            function ( initialValues ) {
                return [
                    WMDE.ReduxValidation.createValidationDispatcher(
                            WMDE.FormValidation.createAmountValidator( initData.data( 'validate-amount-url' ) ),
                            actions.newFinishAmountValidationAction,
                            [ 'amount', 'paymentType' ],
                            initialValues
                    ),
                    WMDE.ReduxValidation.createValidationDispatcher(
                            WMDE.FormValidation.createAddressValidator( initData.data( 'validate-address-url' ) ),
                            actions.newFinishAddressValidationAction,
                            [ 'addressType', 'salutation', 'title', 'firstName', 'lastName', 'companyName', 'street', 'postcode', 'city', 'country', 'email' ],
                            initialValues
                    ),
                    WMDE.ReduxValidation.createValidationDispatcher(
                            WMDE.FormValidation.createBankDataValidator( initData.data( 'validate-iban-url' ), initData.data( 'generate-iban-url' ) ),
                            actions.newFinishBankDataValidationAction,
                            [ 'iban', 'accountNumber', 'bankCode', 'debitType', 'paymentType' ],
                            initialValues
                    ),
                    WMDE.ReduxValidation.createValidationDispatcher(
                            WMDE.FormValidation.createSepaConfirmationValidator(),
                            actions.newFinishSepaConfirmationValidationAction,
                            [ 'confirmSepa', 'confirmShortTerm' ],
                            initialValues
                    )
                ];
            },
            store,
            initData.data( 'initial-form-values' ),
            'donationFormContent'
        );

        // Connect view handlers to changes in specific parts in the global state, designated by 'stateKey'
        WMDE.StoreUpdates.connectViewHandlersToStore(
                [
                    {
                        viewHandler: WMDE.View.createFormPageVisibilityHandler( {
                            payment: $( "#paymentPage" ),
                            personalData: $( "#personalDataPage" ),
                            bankConfirmation: $( '#bankConfirmationPage' )
                        } ),
                        stateKey: 'formPagination'
                    },
                    {
                        viewHandler: WMDE.View.createErrorBoxHandler( $( '#validation-errors' ), {
                            amount: 'Betrag',
                            salutation: 'Anrede',
                            title: 'Titel',
                            firstName: 'Vorname',
                            lastName: 'Nachname',
                            company: 'Firma',
                            street: 'Straße',
                            postcode: 'PLZ',
                            city: 'Ort',
                            country: 'Land',
                            email: 'E-Mail'
                        } ),
                        stateKey: 'validationMessages'
                    },
                    // show payment periods if interval payment is selected
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.periode-2-list' ), /^(1|3|6|12)$/ ),
                        stateKey: 'donationFormContent.paymentPeriodInMonths'
                    },
                    // Show bank data input when doing direct debit
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '#bank-data' ), 'BEZ' ),
                        stateKey: 'donationFormContent.paymentType'
                    },
                    // Show the right submit buttons on page 2, depending on payment type
                    {
                        viewHandler: WMDE.View.createSimpleVisibilitySwitcher( $( '#finishFormSubmit2' ), /^MCP|PPL|UEB/ ),
                        stateKey: 'donationFormContent.paymentType'
                    },
                    {
                        viewHandler: WMDE.View.createSimpleVisibilitySwitcher( $( '#continueFormSubmit2' ), 'BEZ' ),
                        stateKey: 'donationFormContent.paymentType'
                    },
                    // Hide anonymous payment when doing direct debit
                    {
                        viewHandler: WMDE.View.createSimpleVisibilitySwitcher( $( '.anonymous-payment-select' ), /^MCP|PPL|UEB/ ),
                        stateKey: 'donationFormContent.paymentType'
                    },
                    // Switch bank data input between IBAN/BIC and Account Number/Bank code
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.slide-sepa' ), 'sepa' ),
                        stateKey: 'donationFormContent.debitType'
                    },
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.slide-non-sepa' ), 'non-sepa' ),
                        stateKey: 'donationFormContent.debitType'
                    },
                    // Show only the right data fields for personal data
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.personal-data-person' ), 'person' ),
                        stateKey: 'donationFormContent.addressType'
                    },
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.personal-data-company' ), 'firma' ),
                        stateKey: 'donationFormContent.addressType'
                    },
                    {
                        viewHandler: WMDE.View.createSlidingVisibilitySwitcher( $( '.personal-data-full' ), /firma|person/ ),
                        stateKey: 'donationFormContent.addressType'
                    },
                    {
                        viewHandler: WMDE.View.createPaymentIntervalAndAmountDisplayHandler(
                                $( '.interval-text' ),
                                $( '.amount-formatted'),
                                {
                                    '0': 'einmalig',
                                    '1': 'monatlich',
                                    '3': 'quartalsweise',
                                    '6': 'halbjährlich',
                                    '12': 'jährlich'
                                },
                                WMDE.CurrencyFormatter.createCurrencyFormatter( 'de' )
                        ),
                        stateKey: 'donationFormContent'
                    },
                    {
                        viewHandler: WMDE.View.createDisplayAddressHandler( {
                            fullName: $( '.confirm-name' ),
                            street: $( '.confirm-street' ),
                            postcode: $( '.confirm-postcode' ),
                            city: $( '.confirm-city' ),
                            country: $( '.confirm-country' ),
                            email: $( '.confirm-email' )
                        } ),
                        stateKey: 'donationFormContent'
                    },
                    {
                        viewHandler: WMDE.View.createBankDataDisplayHandler(
                            $( '.confirm-iban' ),
                            $( '.confirm-bic' ),
                            $( '.confirm-bank-name' )
                        ),
                        stateKey: 'donationFormContent'
                    }
                ],
                store
        );

        // connect DOM elements to actions

        function personalDataPageIsValid() {
            var validity = store.getState().validity,
                formContent = store.getState().donationFormContent,
                addressIsValid = formContent.addressType === 'anonym' || validity.address,
                bankDataIsValid = formContent.paymentType !== 'BEZ' || validity.bankData;
            return validity.amount && addressIsValid && bankDataIsValid;
        }

        function paymentDataPageIsValid() {
            var currentState = store.getState();
            return currentState.validity.amount ||
                    ( currentState.donationFormContent.amount && currentState.donationFormContent.paymentType ) ;
        }

        $( '#continueFormSubmit1' ).click( function () {
            if ( paymentDataPageIsValid() ) {
                store.dispatch( actions.newNextPageAction() );
            } else {
                alert( 'Bitte füllen Sie das Formular komplett aus.' );
            }
        } );

        $( '#continueFormSubmit2' ).click( function () {
            if ( personalDataPageIsValid() ) {
                store.dispatch( actions.newNextPageAction() );
            } else {
                alert( 'Bitte füllen Sie das Formular komplett aus.' );
            }
        } );

        $( '#finishFormSubmit2' ).click( function () {
            if ( personalDataPageIsValid() ) {
                $( '#donForm2' ).submit();
            } else {
                alert( 'Bitte füllen Sie das Formular komplett aus.' );
            }
        } );

        $( '#finishFormSubmit3' ).click( function () {
            var validity = store.getState().validity;
            if ( validity.amount && validity.address && validity.bankData && validity.sepaConfirmation ) {
                $( '#donForm2' ).submit();
            } else {
                alert( 'Bitte füllen Sie das Formular komplett aus.' );
            }
        } );

        // Set initial form values
        store.dispatch( actions.newInitializeContentAction( initData.data( 'initial-form-values' ) ) );

        // Initialize form pages
        store.dispatch( actions.newAddPageAction( 'payment' ) );
        store.dispatch( actions.newAddPageAction( 'personalData' ) );
        store.dispatch( actions.newAddPageAction( 'bankConfirmation' ) );

        // switch to personal page if payment data is filled in
        if ( paymentDataPageIsValid() ) {
            store.dispatch( actions.newNextPageAction() );
        }

    } );
</script>

<!-- TODO
<div class="wlightbox-contents">
    <div id="wlightbox-wohin-geht-das-geld">
</html>{{Web:Spendenseite-HK2013/rewrite/10h16_Lightbox_Wohin_geht_das_Geld}}<html>
</div>
<div id="wlightbox-steuerlich-absetzbar">
</html>{{Web:Spendenseite-HK2013/rewrite/10h16_Lightbox_Steuer}}<html>
</div>
<div id="wlightbox-bitcoin">
</html>{{Web:Spendenseite-HK2013/rewrite/10h16_Lightbox_BitCoin}}<html>
</div>
<div id="wlightbox-spendenkommentare"></html>{{Web:Spendenseite-HK2013/rewrite/10h16_Lightbox_Spendenkommentare}}<html></div>

</div>
</html>{{Web:Spendenseite-HK2013/rewrite/Bank Detail Banner}}<html>
</html>
-->
